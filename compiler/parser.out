Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> declaration_list
Rule 2     declaration_list -> declaration_list declaration
Rule 3     declaration_list -> declaration
Rule 4     declaration -> statement_list
Rule 5     statement_list -> statement_list statement
Rule 6     statement_list -> empty
Rule 7     statement -> expression_stmt
Rule 8     statement -> iteration_stmt
Rule 9     statement -> statement_list
Rule 10    iteration_stmt -> FOR NUMBER statement_list FINAL
Rule 11    expression_stmt -> expression
Rule 12    expression_stmt -> FINAL
Rule 13    expression -> ADDV VARIABLE VARIABLE VARIABLE
Rule 14    expression -> SUBV VARIABLE VARIABLE VARIABLE
Rule 15    expression -> XORV VARIABLE VARIABLE VARIABLE
Rule 16    expression -> SCLV VARIABLE VARIABLE VARIABLE
Rule 17    expression -> SCRV VARIABLE VARIABLE VARIABLE
Rule 18    expression -> LDVU VARIABLE VARIABLE NUMBER
Rule 19    expression -> LDVL VARIABLE VARIABLE NUMBER
Rule 20    expression -> STVU VARIABLE VARIABLE NUMBER
Rule 21    expression -> STVL VARIABLE VARIABLE NUMBER
Rule 22    expression -> ADDE VARIABLE VARIABLE
Rule 23    empty -> <empty>

Terminals, with rules where they appear

ADDE                 : 22
ADDV                 : 13
FINAL                : 10 12
FOR                  : 10
LDVL                 : 19
LDVU                 : 18
NUMBER               : 10 18 19 20 21
SCLV                 : 16
SCRV                 : 17
STVL                 : 21
STVU                 : 20
SUBV                 : 14
VARIABLE             : 13 13 13 14 14 14 15 15 15 16 16 16 17 17 17 18 18 19 19 20 20 21 21 22 22
XORV                 : 15
error                : 

Nonterminals, with rules where they appear

declaration          : 2 3
declaration_list     : 1 2
empty                : 6
expression           : 11
expression_stmt      : 7
iteration_stmt       : 8
program              : 0
statement            : 5
statement_list       : 4 5 9 10

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . declaration_list
    (2) declaration_list -> . declaration_list declaration
    (3) declaration_list -> . declaration
    (4) declaration -> . statement_list
    (5) statement_list -> . statement_list statement
    (6) statement_list -> . empty
    (23) empty -> .

    FINAL           reduce using rule 23 (empty -> .)
    FOR             reduce using rule 23 (empty -> .)
    ADDV            reduce using rule 23 (empty -> .)
    SUBV            reduce using rule 23 (empty -> .)
    XORV            reduce using rule 23 (empty -> .)
    SCLV            reduce using rule 23 (empty -> .)
    SCRV            reduce using rule 23 (empty -> .)
    LDVU            reduce using rule 23 (empty -> .)
    LDVL            reduce using rule 23 (empty -> .)
    STVU            reduce using rule 23 (empty -> .)
    STVL            reduce using rule 23 (empty -> .)
    ADDE            reduce using rule 23 (empty -> .)
    $end            reduce using rule 23 (empty -> .)

    declaration_list               shift and go to state 1
    empty                          shift and go to state 2
    program                        shift and go to state 3
    declaration                    shift and go to state 4
    statement_list                 shift and go to state 5

state 1

    (1) program -> declaration_list .
    (2) declaration_list -> declaration_list . declaration
    (4) declaration -> . statement_list
    (5) statement_list -> . statement_list statement
    (6) statement_list -> . empty
    (23) empty -> .

  ! reduce/reduce conflict for $end resolved using rule 1 (program -> declaration_list .)
    $end            reduce using rule 1 (program -> declaration_list .)
    FINAL           reduce using rule 23 (empty -> .)
    FOR             reduce using rule 23 (empty -> .)
    ADDV            reduce using rule 23 (empty -> .)
    SUBV            reduce using rule 23 (empty -> .)
    XORV            reduce using rule 23 (empty -> .)
    SCLV            reduce using rule 23 (empty -> .)
    SCRV            reduce using rule 23 (empty -> .)
    LDVU            reduce using rule 23 (empty -> .)
    LDVL            reduce using rule 23 (empty -> .)
    STVU            reduce using rule 23 (empty -> .)
    STVL            reduce using rule 23 (empty -> .)
    ADDE            reduce using rule 23 (empty -> .)

  ! $end            [ reduce using rule 23 (empty -> .) ]

    empty                          shift and go to state 2
    declaration                    shift and go to state 6
    statement_list                 shift and go to state 5

state 2

    (6) statement_list -> empty .

    FINAL           reduce using rule 6 (statement_list -> empty .)
    FOR             reduce using rule 6 (statement_list -> empty .)
    ADDV            reduce using rule 6 (statement_list -> empty .)
    SUBV            reduce using rule 6 (statement_list -> empty .)
    XORV            reduce using rule 6 (statement_list -> empty .)
    SCLV            reduce using rule 6 (statement_list -> empty .)
    SCRV            reduce using rule 6 (statement_list -> empty .)
    LDVU            reduce using rule 6 (statement_list -> empty .)
    LDVL            reduce using rule 6 (statement_list -> empty .)
    STVU            reduce using rule 6 (statement_list -> empty .)
    STVL            reduce using rule 6 (statement_list -> empty .)
    ADDE            reduce using rule 6 (statement_list -> empty .)
    $end            reduce using rule 6 (statement_list -> empty .)


state 3

    (0) S' -> program .



state 4

    (3) declaration_list -> declaration .

    FINAL           reduce using rule 3 (declaration_list -> declaration .)
    FOR             reduce using rule 3 (declaration_list -> declaration .)
    ADDV            reduce using rule 3 (declaration_list -> declaration .)
    SUBV            reduce using rule 3 (declaration_list -> declaration .)
    XORV            reduce using rule 3 (declaration_list -> declaration .)
    SCLV            reduce using rule 3 (declaration_list -> declaration .)
    SCRV            reduce using rule 3 (declaration_list -> declaration .)
    LDVU            reduce using rule 3 (declaration_list -> declaration .)
    LDVL            reduce using rule 3 (declaration_list -> declaration .)
    STVU            reduce using rule 3 (declaration_list -> declaration .)
    STVL            reduce using rule 3 (declaration_list -> declaration .)
    ADDE            reduce using rule 3 (declaration_list -> declaration .)
    $end            reduce using rule 3 (declaration_list -> declaration .)


state 5

    (4) declaration -> statement_list .
    (5) statement_list -> statement_list . statement
    (7) statement -> . expression_stmt
    (8) statement -> . iteration_stmt
    (9) statement -> . statement_list
    (11) expression_stmt -> . expression
    (12) expression_stmt -> . FINAL
    (10) iteration_stmt -> . FOR NUMBER statement_list FINAL
    (5) statement_list -> . statement_list statement
    (6) statement_list -> . empty
    (13) expression -> . ADDV VARIABLE VARIABLE VARIABLE
    (14) expression -> . SUBV VARIABLE VARIABLE VARIABLE
    (15) expression -> . XORV VARIABLE VARIABLE VARIABLE
    (16) expression -> . SCLV VARIABLE VARIABLE VARIABLE
    (17) expression -> . SCRV VARIABLE VARIABLE VARIABLE
    (18) expression -> . LDVU VARIABLE VARIABLE NUMBER
    (19) expression -> . LDVL VARIABLE VARIABLE NUMBER
    (20) expression -> . STVU VARIABLE VARIABLE NUMBER
    (21) expression -> . STVL VARIABLE VARIABLE NUMBER
    (22) expression -> . ADDE VARIABLE VARIABLE
    (23) empty -> .

  ! shift/reduce conflict for FINAL resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for ADDV resolved as shift
  ! shift/reduce conflict for SUBV resolved as shift
  ! shift/reduce conflict for XORV resolved as shift
  ! shift/reduce conflict for SCLV resolved as shift
  ! shift/reduce conflict for SCRV resolved as shift
  ! shift/reduce conflict for LDVU resolved as shift
  ! shift/reduce conflict for LDVL resolved as shift
  ! shift/reduce conflict for STVU resolved as shift
  ! shift/reduce conflict for STVL resolved as shift
  ! shift/reduce conflict for ADDE resolved as shift
  ! shift/reduce conflict for FINAL resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for ADDV resolved as shift
  ! shift/reduce conflict for SUBV resolved as shift
  ! shift/reduce conflict for XORV resolved as shift
  ! shift/reduce conflict for SCLV resolved as shift
  ! shift/reduce conflict for SCRV resolved as shift
  ! shift/reduce conflict for LDVU resolved as shift
  ! shift/reduce conflict for LDVL resolved as shift
  ! shift/reduce conflict for STVU resolved as shift
  ! shift/reduce conflict for STVL resolved as shift
  ! shift/reduce conflict for ADDE resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 4 (declaration -> statement_list .)
    $end            reduce using rule 4 (declaration -> statement_list .)
    FINAL           shift and go to state 16
    FOR             shift and go to state 22
    ADDV            shift and go to state 15
    SUBV            shift and go to state 9
    XORV            shift and go to state 19
    SCLV            shift and go to state 18
    SCRV            shift and go to state 14
    LDVU            shift and go to state 11
    LDVL            shift and go to state 20
    STVU            shift and go to state 8
    STVL            shift and go to state 13
    ADDE            shift and go to state 21

  ! FINAL           [ reduce using rule 4 (declaration -> statement_list .) ]
  ! FOR             [ reduce using rule 4 (declaration -> statement_list .) ]
  ! ADDV            [ reduce using rule 4 (declaration -> statement_list .) ]
  ! SUBV            [ reduce using rule 4 (declaration -> statement_list .) ]
  ! XORV            [ reduce using rule 4 (declaration -> statement_list .) ]
  ! SCLV            [ reduce using rule 4 (declaration -> statement_list .) ]
  ! SCRV            [ reduce using rule 4 (declaration -> statement_list .) ]
  ! LDVU            [ reduce using rule 4 (declaration -> statement_list .) ]
  ! LDVL            [ reduce using rule 4 (declaration -> statement_list .) ]
  ! STVU            [ reduce using rule 4 (declaration -> statement_list .) ]
  ! STVL            [ reduce using rule 4 (declaration -> statement_list .) ]
  ! ADDE            [ reduce using rule 4 (declaration -> statement_list .) ]
  ! FINAL           [ reduce using rule 23 (empty -> .) ]
  ! FOR             [ reduce using rule 23 (empty -> .) ]
  ! ADDV            [ reduce using rule 23 (empty -> .) ]
  ! SUBV            [ reduce using rule 23 (empty -> .) ]
  ! XORV            [ reduce using rule 23 (empty -> .) ]
  ! SCLV            [ reduce using rule 23 (empty -> .) ]
  ! SCRV            [ reduce using rule 23 (empty -> .) ]
  ! LDVU            [ reduce using rule 23 (empty -> .) ]
  ! LDVL            [ reduce using rule 23 (empty -> .) ]
  ! STVU            [ reduce using rule 23 (empty -> .) ]
  ! STVL            [ reduce using rule 23 (empty -> .) ]
  ! ADDE            [ reduce using rule 23 (empty -> .) ]
  ! $end            [ reduce using rule 23 (empty -> .) ]

    expression_stmt                shift and go to state 7
    statement                      shift and go to state 10
    empty                          shift and go to state 2
    iteration_stmt                 shift and go to state 12
    expression                     shift and go to state 17
    statement_list                 shift and go to state 23

state 6

    (2) declaration_list -> declaration_list declaration .

    FINAL           reduce using rule 2 (declaration_list -> declaration_list declaration .)
    FOR             reduce using rule 2 (declaration_list -> declaration_list declaration .)
    ADDV            reduce using rule 2 (declaration_list -> declaration_list declaration .)
    SUBV            reduce using rule 2 (declaration_list -> declaration_list declaration .)
    XORV            reduce using rule 2 (declaration_list -> declaration_list declaration .)
    SCLV            reduce using rule 2 (declaration_list -> declaration_list declaration .)
    SCRV            reduce using rule 2 (declaration_list -> declaration_list declaration .)
    LDVU            reduce using rule 2 (declaration_list -> declaration_list declaration .)
    LDVL            reduce using rule 2 (declaration_list -> declaration_list declaration .)
    STVU            reduce using rule 2 (declaration_list -> declaration_list declaration .)
    STVL            reduce using rule 2 (declaration_list -> declaration_list declaration .)
    ADDE            reduce using rule 2 (declaration_list -> declaration_list declaration .)
    $end            reduce using rule 2 (declaration_list -> declaration_list declaration .)


state 7

    (7) statement -> expression_stmt .

    FINAL           reduce using rule 7 (statement -> expression_stmt .)
    FOR             reduce using rule 7 (statement -> expression_stmt .)
    ADDV            reduce using rule 7 (statement -> expression_stmt .)
    SUBV            reduce using rule 7 (statement -> expression_stmt .)
    XORV            reduce using rule 7 (statement -> expression_stmt .)
    SCLV            reduce using rule 7 (statement -> expression_stmt .)
    SCRV            reduce using rule 7 (statement -> expression_stmt .)
    LDVU            reduce using rule 7 (statement -> expression_stmt .)
    LDVL            reduce using rule 7 (statement -> expression_stmt .)
    STVU            reduce using rule 7 (statement -> expression_stmt .)
    STVL            reduce using rule 7 (statement -> expression_stmt .)
    ADDE            reduce using rule 7 (statement -> expression_stmt .)
    $end            reduce using rule 7 (statement -> expression_stmt .)


state 8

    (20) expression -> STVU . VARIABLE VARIABLE NUMBER

    VARIABLE        shift and go to state 24


state 9

    (14) expression -> SUBV . VARIABLE VARIABLE VARIABLE

    VARIABLE        shift and go to state 25


state 10

    (5) statement_list -> statement_list statement .

    FINAL           reduce using rule 5 (statement_list -> statement_list statement .)
    FOR             reduce using rule 5 (statement_list -> statement_list statement .)
    ADDV            reduce using rule 5 (statement_list -> statement_list statement .)
    SUBV            reduce using rule 5 (statement_list -> statement_list statement .)
    XORV            reduce using rule 5 (statement_list -> statement_list statement .)
    SCLV            reduce using rule 5 (statement_list -> statement_list statement .)
    SCRV            reduce using rule 5 (statement_list -> statement_list statement .)
    LDVU            reduce using rule 5 (statement_list -> statement_list statement .)
    LDVL            reduce using rule 5 (statement_list -> statement_list statement .)
    STVU            reduce using rule 5 (statement_list -> statement_list statement .)
    STVL            reduce using rule 5 (statement_list -> statement_list statement .)
    ADDE            reduce using rule 5 (statement_list -> statement_list statement .)
    $end            reduce using rule 5 (statement_list -> statement_list statement .)


state 11

    (18) expression -> LDVU . VARIABLE VARIABLE NUMBER

    VARIABLE        shift and go to state 26


state 12

    (8) statement -> iteration_stmt .

    FINAL           reduce using rule 8 (statement -> iteration_stmt .)
    FOR             reduce using rule 8 (statement -> iteration_stmt .)
    ADDV            reduce using rule 8 (statement -> iteration_stmt .)
    SUBV            reduce using rule 8 (statement -> iteration_stmt .)
    XORV            reduce using rule 8 (statement -> iteration_stmt .)
    SCLV            reduce using rule 8 (statement -> iteration_stmt .)
    SCRV            reduce using rule 8 (statement -> iteration_stmt .)
    LDVU            reduce using rule 8 (statement -> iteration_stmt .)
    LDVL            reduce using rule 8 (statement -> iteration_stmt .)
    STVU            reduce using rule 8 (statement -> iteration_stmt .)
    STVL            reduce using rule 8 (statement -> iteration_stmt .)
    ADDE            reduce using rule 8 (statement -> iteration_stmt .)
    $end            reduce using rule 8 (statement -> iteration_stmt .)


state 13

    (21) expression -> STVL . VARIABLE VARIABLE NUMBER

    VARIABLE        shift and go to state 27


state 14

    (17) expression -> SCRV . VARIABLE VARIABLE VARIABLE

    VARIABLE        shift and go to state 28


state 15

    (13) expression -> ADDV . VARIABLE VARIABLE VARIABLE

    VARIABLE        shift and go to state 29


state 16

    (12) expression_stmt -> FINAL .

    FINAL           reduce using rule 12 (expression_stmt -> FINAL .)
    FOR             reduce using rule 12 (expression_stmt -> FINAL .)
    ADDV            reduce using rule 12 (expression_stmt -> FINAL .)
    SUBV            reduce using rule 12 (expression_stmt -> FINAL .)
    XORV            reduce using rule 12 (expression_stmt -> FINAL .)
    SCLV            reduce using rule 12 (expression_stmt -> FINAL .)
    SCRV            reduce using rule 12 (expression_stmt -> FINAL .)
    LDVU            reduce using rule 12 (expression_stmt -> FINAL .)
    LDVL            reduce using rule 12 (expression_stmt -> FINAL .)
    STVU            reduce using rule 12 (expression_stmt -> FINAL .)
    STVL            reduce using rule 12 (expression_stmt -> FINAL .)
    ADDE            reduce using rule 12 (expression_stmt -> FINAL .)
    $end            reduce using rule 12 (expression_stmt -> FINAL .)


state 17

    (11) expression_stmt -> expression .

    FINAL           reduce using rule 11 (expression_stmt -> expression .)
    FOR             reduce using rule 11 (expression_stmt -> expression .)
    ADDV            reduce using rule 11 (expression_stmt -> expression .)
    SUBV            reduce using rule 11 (expression_stmt -> expression .)
    XORV            reduce using rule 11 (expression_stmt -> expression .)
    SCLV            reduce using rule 11 (expression_stmt -> expression .)
    SCRV            reduce using rule 11 (expression_stmt -> expression .)
    LDVU            reduce using rule 11 (expression_stmt -> expression .)
    LDVL            reduce using rule 11 (expression_stmt -> expression .)
    STVU            reduce using rule 11 (expression_stmt -> expression .)
    STVL            reduce using rule 11 (expression_stmt -> expression .)
    ADDE            reduce using rule 11 (expression_stmt -> expression .)
    $end            reduce using rule 11 (expression_stmt -> expression .)


state 18

    (16) expression -> SCLV . VARIABLE VARIABLE VARIABLE

    VARIABLE        shift and go to state 30


state 19

    (15) expression -> XORV . VARIABLE VARIABLE VARIABLE

    VARIABLE        shift and go to state 31


state 20

    (19) expression -> LDVL . VARIABLE VARIABLE NUMBER

    VARIABLE        shift and go to state 32


state 21

    (22) expression -> ADDE . VARIABLE VARIABLE

    VARIABLE        shift and go to state 33


state 22

    (10) iteration_stmt -> FOR . NUMBER statement_list FINAL

    NUMBER          shift and go to state 34


state 23

    (9) statement -> statement_list .
    (5) statement_list -> statement_list . statement
    (7) statement -> . expression_stmt
    (8) statement -> . iteration_stmt
    (9) statement -> . statement_list
    (11) expression_stmt -> . expression
    (12) expression_stmt -> . FINAL
    (10) iteration_stmt -> . FOR NUMBER statement_list FINAL
    (5) statement_list -> . statement_list statement
    (6) statement_list -> . empty
    (13) expression -> . ADDV VARIABLE VARIABLE VARIABLE
    (14) expression -> . SUBV VARIABLE VARIABLE VARIABLE
    (15) expression -> . XORV VARIABLE VARIABLE VARIABLE
    (16) expression -> . SCLV VARIABLE VARIABLE VARIABLE
    (17) expression -> . SCRV VARIABLE VARIABLE VARIABLE
    (18) expression -> . LDVU VARIABLE VARIABLE NUMBER
    (19) expression -> . LDVL VARIABLE VARIABLE NUMBER
    (20) expression -> . STVU VARIABLE VARIABLE NUMBER
    (21) expression -> . STVL VARIABLE VARIABLE NUMBER
    (22) expression -> . ADDE VARIABLE VARIABLE
    (23) empty -> .

  ! shift/reduce conflict for FINAL resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for ADDV resolved as shift
  ! shift/reduce conflict for SUBV resolved as shift
  ! shift/reduce conflict for XORV resolved as shift
  ! shift/reduce conflict for SCLV resolved as shift
  ! shift/reduce conflict for SCRV resolved as shift
  ! shift/reduce conflict for LDVU resolved as shift
  ! shift/reduce conflict for LDVL resolved as shift
  ! shift/reduce conflict for STVU resolved as shift
  ! shift/reduce conflict for STVL resolved as shift
  ! shift/reduce conflict for ADDE resolved as shift
  ! shift/reduce conflict for FINAL resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for ADDV resolved as shift
  ! shift/reduce conflict for SUBV resolved as shift
  ! shift/reduce conflict for XORV resolved as shift
  ! shift/reduce conflict for SCLV resolved as shift
  ! shift/reduce conflict for SCRV resolved as shift
  ! shift/reduce conflict for LDVU resolved as shift
  ! shift/reduce conflict for LDVL resolved as shift
  ! shift/reduce conflict for STVU resolved as shift
  ! shift/reduce conflict for STVL resolved as shift
  ! shift/reduce conflict for ADDE resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 9 (statement -> statement_list .)
    $end            reduce using rule 9 (statement -> statement_list .)
    FINAL           shift and go to state 16
    FOR             shift and go to state 22
    ADDV            shift and go to state 15
    SUBV            shift and go to state 9
    XORV            shift and go to state 19
    SCLV            shift and go to state 18
    SCRV            shift and go to state 14
    LDVU            shift and go to state 11
    LDVL            shift and go to state 20
    STVU            shift and go to state 8
    STVL            shift and go to state 13
    ADDE            shift and go to state 21

  ! FINAL           [ reduce using rule 9 (statement -> statement_list .) ]
  ! FOR             [ reduce using rule 9 (statement -> statement_list .) ]
  ! ADDV            [ reduce using rule 9 (statement -> statement_list .) ]
  ! SUBV            [ reduce using rule 9 (statement -> statement_list .) ]
  ! XORV            [ reduce using rule 9 (statement -> statement_list .) ]
  ! SCLV            [ reduce using rule 9 (statement -> statement_list .) ]
  ! SCRV            [ reduce using rule 9 (statement -> statement_list .) ]
  ! LDVU            [ reduce using rule 9 (statement -> statement_list .) ]
  ! LDVL            [ reduce using rule 9 (statement -> statement_list .) ]
  ! STVU            [ reduce using rule 9 (statement -> statement_list .) ]
  ! STVL            [ reduce using rule 9 (statement -> statement_list .) ]
  ! ADDE            [ reduce using rule 9 (statement -> statement_list .) ]
  ! FINAL           [ reduce using rule 23 (empty -> .) ]
  ! FOR             [ reduce using rule 23 (empty -> .) ]
  ! ADDV            [ reduce using rule 23 (empty -> .) ]
  ! SUBV            [ reduce using rule 23 (empty -> .) ]
  ! XORV            [ reduce using rule 23 (empty -> .) ]
  ! SCLV            [ reduce using rule 23 (empty -> .) ]
  ! SCRV            [ reduce using rule 23 (empty -> .) ]
  ! LDVU            [ reduce using rule 23 (empty -> .) ]
  ! LDVL            [ reduce using rule 23 (empty -> .) ]
  ! STVU            [ reduce using rule 23 (empty -> .) ]
  ! STVL            [ reduce using rule 23 (empty -> .) ]
  ! ADDE            [ reduce using rule 23 (empty -> .) ]
  ! $end            [ reduce using rule 23 (empty -> .) ]

    expression_stmt                shift and go to state 7
    statement                      shift and go to state 10
    empty                          shift and go to state 2
    iteration_stmt                 shift and go to state 12
    expression                     shift and go to state 17
    statement_list                 shift and go to state 23

state 24

    (20) expression -> STVU VARIABLE . VARIABLE NUMBER

    VARIABLE        shift and go to state 35


state 25

    (14) expression -> SUBV VARIABLE . VARIABLE VARIABLE

    VARIABLE        shift and go to state 36


state 26

    (18) expression -> LDVU VARIABLE . VARIABLE NUMBER

    VARIABLE        shift and go to state 37


state 27

    (21) expression -> STVL VARIABLE . VARIABLE NUMBER

    VARIABLE        shift and go to state 38


state 28

    (17) expression -> SCRV VARIABLE . VARIABLE VARIABLE

    VARIABLE        shift and go to state 39


state 29

    (13) expression -> ADDV VARIABLE . VARIABLE VARIABLE

    VARIABLE        shift and go to state 40


state 30

    (16) expression -> SCLV VARIABLE . VARIABLE VARIABLE

    VARIABLE        shift and go to state 41


state 31

    (15) expression -> XORV VARIABLE . VARIABLE VARIABLE

    VARIABLE        shift and go to state 42


state 32

    (19) expression -> LDVL VARIABLE . VARIABLE NUMBER

    VARIABLE        shift and go to state 43


state 33

    (22) expression -> ADDE VARIABLE . VARIABLE

    VARIABLE        shift and go to state 44


state 34

    (10) iteration_stmt -> FOR NUMBER . statement_list FINAL
    (5) statement_list -> . statement_list statement
    (6) statement_list -> . empty
    (23) empty -> .

    FINAL           reduce using rule 23 (empty -> .)
    FOR             reduce using rule 23 (empty -> .)
    ADDV            reduce using rule 23 (empty -> .)
    SUBV            reduce using rule 23 (empty -> .)
    XORV            reduce using rule 23 (empty -> .)
    SCLV            reduce using rule 23 (empty -> .)
    SCRV            reduce using rule 23 (empty -> .)
    LDVU            reduce using rule 23 (empty -> .)
    LDVL            reduce using rule 23 (empty -> .)
    STVU            reduce using rule 23 (empty -> .)
    STVL            reduce using rule 23 (empty -> .)
    ADDE            reduce using rule 23 (empty -> .)

    empty                          shift and go to state 2
    statement_list                 shift and go to state 45

state 35

    (20) expression -> STVU VARIABLE VARIABLE . NUMBER

    NUMBER          shift and go to state 46


state 36

    (14) expression -> SUBV VARIABLE VARIABLE . VARIABLE

    VARIABLE        shift and go to state 47


state 37

    (18) expression -> LDVU VARIABLE VARIABLE . NUMBER

    NUMBER          shift and go to state 48


state 38

    (21) expression -> STVL VARIABLE VARIABLE . NUMBER

    NUMBER          shift and go to state 49


state 39

    (17) expression -> SCRV VARIABLE VARIABLE . VARIABLE

    VARIABLE        shift and go to state 50


state 40

    (13) expression -> ADDV VARIABLE VARIABLE . VARIABLE

    VARIABLE        shift and go to state 51


state 41

    (16) expression -> SCLV VARIABLE VARIABLE . VARIABLE

    VARIABLE        shift and go to state 52


state 42

    (15) expression -> XORV VARIABLE VARIABLE . VARIABLE

    VARIABLE        shift and go to state 53


state 43

    (19) expression -> LDVL VARIABLE VARIABLE . NUMBER

    NUMBER          shift and go to state 54


state 44

    (22) expression -> ADDE VARIABLE VARIABLE .

    FINAL           reduce using rule 22 (expression -> ADDE VARIABLE VARIABLE .)
    FOR             reduce using rule 22 (expression -> ADDE VARIABLE VARIABLE .)
    ADDV            reduce using rule 22 (expression -> ADDE VARIABLE VARIABLE .)
    SUBV            reduce using rule 22 (expression -> ADDE VARIABLE VARIABLE .)
    XORV            reduce using rule 22 (expression -> ADDE VARIABLE VARIABLE .)
    SCLV            reduce using rule 22 (expression -> ADDE VARIABLE VARIABLE .)
    SCRV            reduce using rule 22 (expression -> ADDE VARIABLE VARIABLE .)
    LDVU            reduce using rule 22 (expression -> ADDE VARIABLE VARIABLE .)
    LDVL            reduce using rule 22 (expression -> ADDE VARIABLE VARIABLE .)
    STVU            reduce using rule 22 (expression -> ADDE VARIABLE VARIABLE .)
    STVL            reduce using rule 22 (expression -> ADDE VARIABLE VARIABLE .)
    ADDE            reduce using rule 22 (expression -> ADDE VARIABLE VARIABLE .)
    $end            reduce using rule 22 (expression -> ADDE VARIABLE VARIABLE .)


state 45

    (10) iteration_stmt -> FOR NUMBER statement_list . FINAL
    (5) statement_list -> statement_list . statement
    (7) statement -> . expression_stmt
    (8) statement -> . iteration_stmt
    (9) statement -> . statement_list
    (11) expression_stmt -> . expression
    (12) expression_stmt -> . FINAL
    (10) iteration_stmt -> . FOR NUMBER statement_list FINAL
    (5) statement_list -> . statement_list statement
    (6) statement_list -> . empty
    (13) expression -> . ADDV VARIABLE VARIABLE VARIABLE
    (14) expression -> . SUBV VARIABLE VARIABLE VARIABLE
    (15) expression -> . XORV VARIABLE VARIABLE VARIABLE
    (16) expression -> . SCLV VARIABLE VARIABLE VARIABLE
    (17) expression -> . SCRV VARIABLE VARIABLE VARIABLE
    (18) expression -> . LDVU VARIABLE VARIABLE NUMBER
    (19) expression -> . LDVL VARIABLE VARIABLE NUMBER
    (20) expression -> . STVU VARIABLE VARIABLE NUMBER
    (21) expression -> . STVL VARIABLE VARIABLE NUMBER
    (22) expression -> . ADDE VARIABLE VARIABLE
    (23) empty -> .

  ! shift/reduce conflict for FINAL resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for ADDV resolved as shift
  ! shift/reduce conflict for SUBV resolved as shift
  ! shift/reduce conflict for XORV resolved as shift
  ! shift/reduce conflict for SCLV resolved as shift
  ! shift/reduce conflict for SCRV resolved as shift
  ! shift/reduce conflict for LDVU resolved as shift
  ! shift/reduce conflict for LDVL resolved as shift
  ! shift/reduce conflict for STVU resolved as shift
  ! shift/reduce conflict for STVL resolved as shift
  ! shift/reduce conflict for ADDE resolved as shift
    FINAL           shift and go to state 55
    FOR             shift and go to state 22
    ADDV            shift and go to state 15
    SUBV            shift and go to state 9
    XORV            shift and go to state 19
    SCLV            shift and go to state 18
    SCRV            shift and go to state 14
    LDVU            shift and go to state 11
    LDVL            shift and go to state 20
    STVU            shift and go to state 8
    STVL            shift and go to state 13
    ADDE            shift and go to state 21

  ! FINAL           [ reduce using rule 23 (empty -> .) ]
  ! FOR             [ reduce using rule 23 (empty -> .) ]
  ! ADDV            [ reduce using rule 23 (empty -> .) ]
  ! SUBV            [ reduce using rule 23 (empty -> .) ]
  ! XORV            [ reduce using rule 23 (empty -> .) ]
  ! SCLV            [ reduce using rule 23 (empty -> .) ]
  ! SCRV            [ reduce using rule 23 (empty -> .) ]
  ! LDVU            [ reduce using rule 23 (empty -> .) ]
  ! LDVL            [ reduce using rule 23 (empty -> .) ]
  ! STVU            [ reduce using rule 23 (empty -> .) ]
  ! STVL            [ reduce using rule 23 (empty -> .) ]
  ! ADDE            [ reduce using rule 23 (empty -> .) ]

    expression_stmt                shift and go to state 7
    statement                      shift and go to state 10
    empty                          shift and go to state 2
    iteration_stmt                 shift and go to state 12
    expression                     shift and go to state 17
    statement_list                 shift and go to state 23

state 46

    (20) expression -> STVU VARIABLE VARIABLE NUMBER .

    FINAL           reduce using rule 20 (expression -> STVU VARIABLE VARIABLE NUMBER .)
    FOR             reduce using rule 20 (expression -> STVU VARIABLE VARIABLE NUMBER .)
    ADDV            reduce using rule 20 (expression -> STVU VARIABLE VARIABLE NUMBER .)
    SUBV            reduce using rule 20 (expression -> STVU VARIABLE VARIABLE NUMBER .)
    XORV            reduce using rule 20 (expression -> STVU VARIABLE VARIABLE NUMBER .)
    SCLV            reduce using rule 20 (expression -> STVU VARIABLE VARIABLE NUMBER .)
    SCRV            reduce using rule 20 (expression -> STVU VARIABLE VARIABLE NUMBER .)
    LDVU            reduce using rule 20 (expression -> STVU VARIABLE VARIABLE NUMBER .)
    LDVL            reduce using rule 20 (expression -> STVU VARIABLE VARIABLE NUMBER .)
    STVU            reduce using rule 20 (expression -> STVU VARIABLE VARIABLE NUMBER .)
    STVL            reduce using rule 20 (expression -> STVU VARIABLE VARIABLE NUMBER .)
    ADDE            reduce using rule 20 (expression -> STVU VARIABLE VARIABLE NUMBER .)
    $end            reduce using rule 20 (expression -> STVU VARIABLE VARIABLE NUMBER .)


state 47

    (14) expression -> SUBV VARIABLE VARIABLE VARIABLE .

    FINAL           reduce using rule 14 (expression -> SUBV VARIABLE VARIABLE VARIABLE .)
    FOR             reduce using rule 14 (expression -> SUBV VARIABLE VARIABLE VARIABLE .)
    ADDV            reduce using rule 14 (expression -> SUBV VARIABLE VARIABLE VARIABLE .)
    SUBV            reduce using rule 14 (expression -> SUBV VARIABLE VARIABLE VARIABLE .)
    XORV            reduce using rule 14 (expression -> SUBV VARIABLE VARIABLE VARIABLE .)
    SCLV            reduce using rule 14 (expression -> SUBV VARIABLE VARIABLE VARIABLE .)
    SCRV            reduce using rule 14 (expression -> SUBV VARIABLE VARIABLE VARIABLE .)
    LDVU            reduce using rule 14 (expression -> SUBV VARIABLE VARIABLE VARIABLE .)
    LDVL            reduce using rule 14 (expression -> SUBV VARIABLE VARIABLE VARIABLE .)
    STVU            reduce using rule 14 (expression -> SUBV VARIABLE VARIABLE VARIABLE .)
    STVL            reduce using rule 14 (expression -> SUBV VARIABLE VARIABLE VARIABLE .)
    ADDE            reduce using rule 14 (expression -> SUBV VARIABLE VARIABLE VARIABLE .)
    $end            reduce using rule 14 (expression -> SUBV VARIABLE VARIABLE VARIABLE .)


state 48

    (18) expression -> LDVU VARIABLE VARIABLE NUMBER .

    FINAL           reduce using rule 18 (expression -> LDVU VARIABLE VARIABLE NUMBER .)
    FOR             reduce using rule 18 (expression -> LDVU VARIABLE VARIABLE NUMBER .)
    ADDV            reduce using rule 18 (expression -> LDVU VARIABLE VARIABLE NUMBER .)
    SUBV            reduce using rule 18 (expression -> LDVU VARIABLE VARIABLE NUMBER .)
    XORV            reduce using rule 18 (expression -> LDVU VARIABLE VARIABLE NUMBER .)
    SCLV            reduce using rule 18 (expression -> LDVU VARIABLE VARIABLE NUMBER .)
    SCRV            reduce using rule 18 (expression -> LDVU VARIABLE VARIABLE NUMBER .)
    LDVU            reduce using rule 18 (expression -> LDVU VARIABLE VARIABLE NUMBER .)
    LDVL            reduce using rule 18 (expression -> LDVU VARIABLE VARIABLE NUMBER .)
    STVU            reduce using rule 18 (expression -> LDVU VARIABLE VARIABLE NUMBER .)
    STVL            reduce using rule 18 (expression -> LDVU VARIABLE VARIABLE NUMBER .)
    ADDE            reduce using rule 18 (expression -> LDVU VARIABLE VARIABLE NUMBER .)
    $end            reduce using rule 18 (expression -> LDVU VARIABLE VARIABLE NUMBER .)


state 49

    (21) expression -> STVL VARIABLE VARIABLE NUMBER .

    FINAL           reduce using rule 21 (expression -> STVL VARIABLE VARIABLE NUMBER .)
    FOR             reduce using rule 21 (expression -> STVL VARIABLE VARIABLE NUMBER .)
    ADDV            reduce using rule 21 (expression -> STVL VARIABLE VARIABLE NUMBER .)
    SUBV            reduce using rule 21 (expression -> STVL VARIABLE VARIABLE NUMBER .)
    XORV            reduce using rule 21 (expression -> STVL VARIABLE VARIABLE NUMBER .)
    SCLV            reduce using rule 21 (expression -> STVL VARIABLE VARIABLE NUMBER .)
    SCRV            reduce using rule 21 (expression -> STVL VARIABLE VARIABLE NUMBER .)
    LDVU            reduce using rule 21 (expression -> STVL VARIABLE VARIABLE NUMBER .)
    LDVL            reduce using rule 21 (expression -> STVL VARIABLE VARIABLE NUMBER .)
    STVU            reduce using rule 21 (expression -> STVL VARIABLE VARIABLE NUMBER .)
    STVL            reduce using rule 21 (expression -> STVL VARIABLE VARIABLE NUMBER .)
    ADDE            reduce using rule 21 (expression -> STVL VARIABLE VARIABLE NUMBER .)
    $end            reduce using rule 21 (expression -> STVL VARIABLE VARIABLE NUMBER .)


state 50

    (17) expression -> SCRV VARIABLE VARIABLE VARIABLE .

    FINAL           reduce using rule 17 (expression -> SCRV VARIABLE VARIABLE VARIABLE .)
    FOR             reduce using rule 17 (expression -> SCRV VARIABLE VARIABLE VARIABLE .)
    ADDV            reduce using rule 17 (expression -> SCRV VARIABLE VARIABLE VARIABLE .)
    SUBV            reduce using rule 17 (expression -> SCRV VARIABLE VARIABLE VARIABLE .)
    XORV            reduce using rule 17 (expression -> SCRV VARIABLE VARIABLE VARIABLE .)
    SCLV            reduce using rule 17 (expression -> SCRV VARIABLE VARIABLE VARIABLE .)
    SCRV            reduce using rule 17 (expression -> SCRV VARIABLE VARIABLE VARIABLE .)
    LDVU            reduce using rule 17 (expression -> SCRV VARIABLE VARIABLE VARIABLE .)
    LDVL            reduce using rule 17 (expression -> SCRV VARIABLE VARIABLE VARIABLE .)
    STVU            reduce using rule 17 (expression -> SCRV VARIABLE VARIABLE VARIABLE .)
    STVL            reduce using rule 17 (expression -> SCRV VARIABLE VARIABLE VARIABLE .)
    ADDE            reduce using rule 17 (expression -> SCRV VARIABLE VARIABLE VARIABLE .)
    $end            reduce using rule 17 (expression -> SCRV VARIABLE VARIABLE VARIABLE .)


state 51

    (13) expression -> ADDV VARIABLE VARIABLE VARIABLE .

    FINAL           reduce using rule 13 (expression -> ADDV VARIABLE VARIABLE VARIABLE .)
    FOR             reduce using rule 13 (expression -> ADDV VARIABLE VARIABLE VARIABLE .)
    ADDV            reduce using rule 13 (expression -> ADDV VARIABLE VARIABLE VARIABLE .)
    SUBV            reduce using rule 13 (expression -> ADDV VARIABLE VARIABLE VARIABLE .)
    XORV            reduce using rule 13 (expression -> ADDV VARIABLE VARIABLE VARIABLE .)
    SCLV            reduce using rule 13 (expression -> ADDV VARIABLE VARIABLE VARIABLE .)
    SCRV            reduce using rule 13 (expression -> ADDV VARIABLE VARIABLE VARIABLE .)
    LDVU            reduce using rule 13 (expression -> ADDV VARIABLE VARIABLE VARIABLE .)
    LDVL            reduce using rule 13 (expression -> ADDV VARIABLE VARIABLE VARIABLE .)
    STVU            reduce using rule 13 (expression -> ADDV VARIABLE VARIABLE VARIABLE .)
    STVL            reduce using rule 13 (expression -> ADDV VARIABLE VARIABLE VARIABLE .)
    ADDE            reduce using rule 13 (expression -> ADDV VARIABLE VARIABLE VARIABLE .)
    $end            reduce using rule 13 (expression -> ADDV VARIABLE VARIABLE VARIABLE .)


state 52

    (16) expression -> SCLV VARIABLE VARIABLE VARIABLE .

    FINAL           reduce using rule 16 (expression -> SCLV VARIABLE VARIABLE VARIABLE .)
    FOR             reduce using rule 16 (expression -> SCLV VARIABLE VARIABLE VARIABLE .)
    ADDV            reduce using rule 16 (expression -> SCLV VARIABLE VARIABLE VARIABLE .)
    SUBV            reduce using rule 16 (expression -> SCLV VARIABLE VARIABLE VARIABLE .)
    XORV            reduce using rule 16 (expression -> SCLV VARIABLE VARIABLE VARIABLE .)
    SCLV            reduce using rule 16 (expression -> SCLV VARIABLE VARIABLE VARIABLE .)
    SCRV            reduce using rule 16 (expression -> SCLV VARIABLE VARIABLE VARIABLE .)
    LDVU            reduce using rule 16 (expression -> SCLV VARIABLE VARIABLE VARIABLE .)
    LDVL            reduce using rule 16 (expression -> SCLV VARIABLE VARIABLE VARIABLE .)
    STVU            reduce using rule 16 (expression -> SCLV VARIABLE VARIABLE VARIABLE .)
    STVL            reduce using rule 16 (expression -> SCLV VARIABLE VARIABLE VARIABLE .)
    ADDE            reduce using rule 16 (expression -> SCLV VARIABLE VARIABLE VARIABLE .)
    $end            reduce using rule 16 (expression -> SCLV VARIABLE VARIABLE VARIABLE .)


state 53

    (15) expression -> XORV VARIABLE VARIABLE VARIABLE .

    FINAL           reduce using rule 15 (expression -> XORV VARIABLE VARIABLE VARIABLE .)
    FOR             reduce using rule 15 (expression -> XORV VARIABLE VARIABLE VARIABLE .)
    ADDV            reduce using rule 15 (expression -> XORV VARIABLE VARIABLE VARIABLE .)
    SUBV            reduce using rule 15 (expression -> XORV VARIABLE VARIABLE VARIABLE .)
    XORV            reduce using rule 15 (expression -> XORV VARIABLE VARIABLE VARIABLE .)
    SCLV            reduce using rule 15 (expression -> XORV VARIABLE VARIABLE VARIABLE .)
    SCRV            reduce using rule 15 (expression -> XORV VARIABLE VARIABLE VARIABLE .)
    LDVU            reduce using rule 15 (expression -> XORV VARIABLE VARIABLE VARIABLE .)
    LDVL            reduce using rule 15 (expression -> XORV VARIABLE VARIABLE VARIABLE .)
    STVU            reduce using rule 15 (expression -> XORV VARIABLE VARIABLE VARIABLE .)
    STVL            reduce using rule 15 (expression -> XORV VARIABLE VARIABLE VARIABLE .)
    ADDE            reduce using rule 15 (expression -> XORV VARIABLE VARIABLE VARIABLE .)
    $end            reduce using rule 15 (expression -> XORV VARIABLE VARIABLE VARIABLE .)


state 54

    (19) expression -> LDVL VARIABLE VARIABLE NUMBER .

    FINAL           reduce using rule 19 (expression -> LDVL VARIABLE VARIABLE NUMBER .)
    FOR             reduce using rule 19 (expression -> LDVL VARIABLE VARIABLE NUMBER .)
    ADDV            reduce using rule 19 (expression -> LDVL VARIABLE VARIABLE NUMBER .)
    SUBV            reduce using rule 19 (expression -> LDVL VARIABLE VARIABLE NUMBER .)
    XORV            reduce using rule 19 (expression -> LDVL VARIABLE VARIABLE NUMBER .)
    SCLV            reduce using rule 19 (expression -> LDVL VARIABLE VARIABLE NUMBER .)
    SCRV            reduce using rule 19 (expression -> LDVL VARIABLE VARIABLE NUMBER .)
    LDVU            reduce using rule 19 (expression -> LDVL VARIABLE VARIABLE NUMBER .)
    LDVL            reduce using rule 19 (expression -> LDVL VARIABLE VARIABLE NUMBER .)
    STVU            reduce using rule 19 (expression -> LDVL VARIABLE VARIABLE NUMBER .)
    STVL            reduce using rule 19 (expression -> LDVL VARIABLE VARIABLE NUMBER .)
    ADDE            reduce using rule 19 (expression -> LDVL VARIABLE VARIABLE NUMBER .)
    $end            reduce using rule 19 (expression -> LDVL VARIABLE VARIABLE NUMBER .)


state 55

    (10) iteration_stmt -> FOR NUMBER statement_list FINAL .
    (12) expression_stmt -> FINAL .

  ! reduce/reduce conflict for FINAL resolved using rule 10 (iteration_stmt -> FOR NUMBER statement_list FINAL .)
  ! reduce/reduce conflict for FOR resolved using rule 10 (iteration_stmt -> FOR NUMBER statement_list FINAL .)
  ! reduce/reduce conflict for ADDV resolved using rule 10 (iteration_stmt -> FOR NUMBER statement_list FINAL .)
  ! reduce/reduce conflict for SUBV resolved using rule 10 (iteration_stmt -> FOR NUMBER statement_list FINAL .)
  ! reduce/reduce conflict for XORV resolved using rule 10 (iteration_stmt -> FOR NUMBER statement_list FINAL .)
  ! reduce/reduce conflict for SCLV resolved using rule 10 (iteration_stmt -> FOR NUMBER statement_list FINAL .)
  ! reduce/reduce conflict for SCRV resolved using rule 10 (iteration_stmt -> FOR NUMBER statement_list FINAL .)
  ! reduce/reduce conflict for LDVU resolved using rule 10 (iteration_stmt -> FOR NUMBER statement_list FINAL .)
  ! reduce/reduce conflict for LDVL resolved using rule 10 (iteration_stmt -> FOR NUMBER statement_list FINAL .)
  ! reduce/reduce conflict for STVU resolved using rule 10 (iteration_stmt -> FOR NUMBER statement_list FINAL .)
  ! reduce/reduce conflict for STVL resolved using rule 10 (iteration_stmt -> FOR NUMBER statement_list FINAL .)
  ! reduce/reduce conflict for ADDE resolved using rule 10 (iteration_stmt -> FOR NUMBER statement_list FINAL .)
    FINAL           reduce using rule 10 (iteration_stmt -> FOR NUMBER statement_list FINAL .)
    FOR             reduce using rule 10 (iteration_stmt -> FOR NUMBER statement_list FINAL .)
    ADDV            reduce using rule 10 (iteration_stmt -> FOR NUMBER statement_list FINAL .)
    SUBV            reduce using rule 10 (iteration_stmt -> FOR NUMBER statement_list FINAL .)
    XORV            reduce using rule 10 (iteration_stmt -> FOR NUMBER statement_list FINAL .)
    SCLV            reduce using rule 10 (iteration_stmt -> FOR NUMBER statement_list FINAL .)
    SCRV            reduce using rule 10 (iteration_stmt -> FOR NUMBER statement_list FINAL .)
    LDVU            reduce using rule 10 (iteration_stmt -> FOR NUMBER statement_list FINAL .)
    LDVL            reduce using rule 10 (iteration_stmt -> FOR NUMBER statement_list FINAL .)
    STVU            reduce using rule 10 (iteration_stmt -> FOR NUMBER statement_list FINAL .)
    STVL            reduce using rule 10 (iteration_stmt -> FOR NUMBER statement_list FINAL .)
    ADDE            reduce using rule 10 (iteration_stmt -> FOR NUMBER statement_list FINAL .)
    $end            reduce using rule 10 (iteration_stmt -> FOR NUMBER statement_list FINAL .)

  ! FINAL           [ reduce using rule 12 (expression_stmt -> FINAL .) ]
  ! FOR             [ reduce using rule 12 (expression_stmt -> FINAL .) ]
  ! ADDV            [ reduce using rule 12 (expression_stmt -> FINAL .) ]
  ! SUBV            [ reduce using rule 12 (expression_stmt -> FINAL .) ]
  ! XORV            [ reduce using rule 12 (expression_stmt -> FINAL .) ]
  ! SCLV            [ reduce using rule 12 (expression_stmt -> FINAL .) ]
  ! SCRV            [ reduce using rule 12 (expression_stmt -> FINAL .) ]
  ! LDVU            [ reduce using rule 12 (expression_stmt -> FINAL .) ]
  ! LDVL            [ reduce using rule 12 (expression_stmt -> FINAL .) ]
  ! STVU            [ reduce using rule 12 (expression_stmt -> FINAL .) ]
  ! STVL            [ reduce using rule 12 (expression_stmt -> FINAL .) ]
  ! ADDE            [ reduce using rule 12 (expression_stmt -> FINAL .) ]

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for FINAL in state 5 resolved as shift
WARNING: shift/reduce conflict for FOR in state 5 resolved as shift
WARNING: shift/reduce conflict for ADDV in state 5 resolved as shift
WARNING: shift/reduce conflict for SUBV in state 5 resolved as shift
WARNING: shift/reduce conflict for XORV in state 5 resolved as shift
WARNING: shift/reduce conflict for SCLV in state 5 resolved as shift
WARNING: shift/reduce conflict for SCRV in state 5 resolved as shift
WARNING: shift/reduce conflict for LDVU in state 5 resolved as shift
WARNING: shift/reduce conflict for LDVL in state 5 resolved as shift
WARNING: shift/reduce conflict for STVU in state 5 resolved as shift
WARNING: shift/reduce conflict for STVL in state 5 resolved as shift
WARNING: shift/reduce conflict for ADDE in state 5 resolved as shift
WARNING: shift/reduce conflict for FINAL in state 5 resolved as shift
WARNING: shift/reduce conflict for FOR in state 5 resolved as shift
WARNING: shift/reduce conflict for ADDV in state 5 resolved as shift
WARNING: shift/reduce conflict for SUBV in state 5 resolved as shift
WARNING: shift/reduce conflict for XORV in state 5 resolved as shift
WARNING: shift/reduce conflict for SCLV in state 5 resolved as shift
WARNING: shift/reduce conflict for SCRV in state 5 resolved as shift
WARNING: shift/reduce conflict for LDVU in state 5 resolved as shift
WARNING: shift/reduce conflict for LDVL in state 5 resolved as shift
WARNING: shift/reduce conflict for STVU in state 5 resolved as shift
WARNING: shift/reduce conflict for STVL in state 5 resolved as shift
WARNING: shift/reduce conflict for ADDE in state 5 resolved as shift
WARNING: shift/reduce conflict for FINAL in state 23 resolved as shift
WARNING: shift/reduce conflict for FOR in state 23 resolved as shift
WARNING: shift/reduce conflict for ADDV in state 23 resolved as shift
WARNING: shift/reduce conflict for SUBV in state 23 resolved as shift
WARNING: shift/reduce conflict for XORV in state 23 resolved as shift
WARNING: shift/reduce conflict for SCLV in state 23 resolved as shift
WARNING: shift/reduce conflict for SCRV in state 23 resolved as shift
WARNING: shift/reduce conflict for LDVU in state 23 resolved as shift
WARNING: shift/reduce conflict for LDVL in state 23 resolved as shift
WARNING: shift/reduce conflict for STVU in state 23 resolved as shift
WARNING: shift/reduce conflict for STVL in state 23 resolved as shift
WARNING: shift/reduce conflict for ADDE in state 23 resolved as shift
WARNING: shift/reduce conflict for FINAL in state 23 resolved as shift
WARNING: shift/reduce conflict for FOR in state 23 resolved as shift
WARNING: shift/reduce conflict for ADDV in state 23 resolved as shift
WARNING: shift/reduce conflict for SUBV in state 23 resolved as shift
WARNING: shift/reduce conflict for XORV in state 23 resolved as shift
WARNING: shift/reduce conflict for SCLV in state 23 resolved as shift
WARNING: shift/reduce conflict for SCRV in state 23 resolved as shift
WARNING: shift/reduce conflict for LDVU in state 23 resolved as shift
WARNING: shift/reduce conflict for LDVL in state 23 resolved as shift
WARNING: shift/reduce conflict for STVU in state 23 resolved as shift
WARNING: shift/reduce conflict for STVL in state 23 resolved as shift
WARNING: shift/reduce conflict for ADDE in state 23 resolved as shift
WARNING: shift/reduce conflict for FINAL in state 45 resolved as shift
WARNING: shift/reduce conflict for FOR in state 45 resolved as shift
WARNING: shift/reduce conflict for ADDV in state 45 resolved as shift
WARNING: shift/reduce conflict for SUBV in state 45 resolved as shift
WARNING: shift/reduce conflict for XORV in state 45 resolved as shift
WARNING: shift/reduce conflict for SCLV in state 45 resolved as shift
WARNING: shift/reduce conflict for SCRV in state 45 resolved as shift
WARNING: shift/reduce conflict for LDVU in state 45 resolved as shift
WARNING: shift/reduce conflict for LDVL in state 45 resolved as shift
WARNING: shift/reduce conflict for STVU in state 45 resolved as shift
WARNING: shift/reduce conflict for STVL in state 45 resolved as shift
WARNING: shift/reduce conflict for ADDE in state 45 resolved as shift
WARNING: reduce/reduce conflict in state 1 resolved using rule (program -> declaration_list)
WARNING: rejected rule (empty -> <empty>) in state 1
WARNING: reduce/reduce conflict in state 5 resolved using rule (declaration -> statement_list)
WARNING: rejected rule (empty -> <empty>) in state 5
WARNING: reduce/reduce conflict in state 23 resolved using rule (statement -> statement_list)
WARNING: rejected rule (empty -> <empty>) in state 23
WARNING: reduce/reduce conflict in state 55 resolved using rule (iteration_stmt -> FOR NUMBER statement_list FINAL)
WARNING: rejected rule (expression_stmt -> FINAL) in state 55
